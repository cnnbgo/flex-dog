<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx"
                layout="vertical"
                creationComplete="loadData()"
                showCloseButton="true"
                width="{this.parentApplication.width - 100}"
                height="{this.parentApplication.height - 100}"
                close="PopUpManager.removePopUp(this);"
                title="货品: {inventory.inventoryCode} {inventory.inventoryName} 占用情况"
                keyDown="if(event.charCode == Keyboard.ESCAPE) PopUpManager.removePopUp(this);">

    <mx:DataGrid id="grid" width="100%" height="100%" variableRowHeight="true">
        <mx:columns>
            <mx:DataGridColumn dataField="index" textAlign="center"
                               headerText="序号"
                               labelFunction="indexNumLabelFun"
                               width="40"/>
            <mx:DataGridColumn dataField="businessKey" width="250" textAlign="center"
                               headerText="业务主键">
                <mx:itemRenderer>
                    <fx:Component>
                        <mx:LinkButton buttonMode="true" useHandCursor="true" color="#6c7dc7" label="{data.businessKey}"
                                       click="viewBusiness()">
                            <fx:Script>
                                <![CDATA[
                                import mx.core.Application;
                                import mx.managers.PopUpManager;

                                private function viewBusiness():void {
                                    var demandLog:BusinessDemandLog = new BusinessDemandLog();
                                    demandLog.selItem = data;
                                    demandLog.setFocus();

                                    PopUpManager.addPopUp(demandLog, Application.application as DisplayObject, true);
                                    PopUpManager.centerPopUp(demandLog);
                                }
                                ]]>
                            </fx:Script>
                        </mx:LinkButton>
                    </fx:Component>
                </mx:itemRenderer>
            </mx:DataGridColumn>
            <mx:DataGridColumn dataField="businessDocNo" textAlign="center"
                               headerText="订单号"/>
            <mx:DataGridColumn dataField="typeName" textAlign="center"
                               headerText="操作类型"/>
            <mx:DataGridColumn dataField="srcDocNo" textAlign="center"
                               headerText="单号"/>
            <mx:DataGridColumn dataField="warehouseName" textAlign="center"
                               headerText="仓库"/>
            <mx:DataGridColumn dataField="batchNo" textAlign="center"
                               headerText="批次号"/>
            <mx:DataGridColumn dataField="lockQuantity" textAlign="center"
                               headerText="占用量"/>
            <mx:DataGridColumn dataField="docDate" textAlign="center"
                               labelFunction="dateLabelFun"
                               headerText="日期"/>
        </mx:columns>
    </mx:DataGrid>
    <mx:ControlBar>
        <mx:LinkButton icon="@Embed('/assets/img/bar_img/406.png')" label="复制选中行" click="copy()"/>
    </mx:ControlBar>
    <fx:Script><![CDATA[
        import com.github.izerui.file.components.loading.LoaderManager;
        import com.github.izerui.file.utils.RemoteObjectUtils;
        import com.github.izerui.file.vo.PageVo;

        import mx.events.ItemClickEvent;
        import mx.formatters.DateFormatter;
        import mx.managers.PopUpManager;
        import mx.rpc.events.ResultEvent;

        [Bindable]
        public var inventory:Object;

        private function loadData():void {
            LoaderManager.showLoading();
            RemoteObjectUtils.execute("demandService", "occupiedDetail", function (event:ResultEvent) {
                LoaderManager.hideLoading();
                grid.dataProvider = event.result;
            }, inventory.entCode, inventory.inventoryId)

        }

        private function dateLabelFun(item:Object, column:DataGridColumn):String {
            var df:DateFormatter = new DateFormatter();
            df.formatString = "YYYY-MM-DD JJ:NN:SS";
            return df.format(item.docDate);
        }

        private function copy():void {
            if (grid.selectedIndex == -1) {
                return;
            }
            var copyText:String = JSON.stringify(grid.selectedItem);
            System.setClipboard(copyText);
        }

        private function indexNumLabelFun(item:Object, column:DataGridColumn):String {
            var indexNum:int = (grid.dataProvider.getItemIndex(item) + 1);
            return indexNum.toString();
        }
        ]]>
    </fx:Script>
</mx:TitleWindow>
