<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx"
                layout="vertical"
                creationComplete="loadData()"
                showCloseButton="true"
                width="{this.parentApplication.width - 100}"
                height="{this.parentApplication.height - 100}"
                close="PopUpManager.removePopUp(this);"
                title="{inventory.inventoryCode} {inventory.inventoryName} 需求日志记录"
                keyDown="if(event.charCode == Keyboard.ESCAPE) PopUpManager.removePopUp(this);">

    <mx:DataGrid id="grid" width="100%" height="100%" variableRowHeight="true" dataProvider="{page.content}">
        <mx:columns>
            <mx:DataGridColumn dataField="index"
                               headerText="序号"
                               labelFunction="indexNumLabelFun"
                               textAlign="center"
                               width="40"/>
            <mx:DataGridColumn dataField="businessKey" width="250" textAlign="center"
                               headerText="业务主键">
                <mx:itemRenderer>
                    <fx:Component>
                        <mx:LinkButton buttonMode="true" useHandCursor="true" color="#6c7dc7" label="{data.businessKey}"
                                       click="viewBusiness()">
                            <fx:Script>
                                <![CDATA[
                                import mx.core.Application;
                                import mx.managers.PopUpManager;

                                private function viewBusiness():void {
                                    var demandLog:BusinessDemandLog = new BusinessDemandLog();
                                    demandLog.selItem = data;
                                    demandLog.setFocus();

                                    PopUpManager.addPopUp(demandLog, Application.application as DisplayObject, true);
                                    PopUpManager.centerPopUp(demandLog);
                                }
                                ]]>
                            </fx:Script>
                        </mx:LinkButton>
                    </fx:Component>
                </mx:itemRenderer>
            </mx:DataGridColumn>
            <mx:DataGridColumn dataField="businessDocNo" width="120" textAlign="center"
                               headerText="订单号"/>
            <mx:DataGridColumn dataField="businessTypeName" textAlign="center"
                               headerText="订单类型"/>
            <mx:DataGridColumn dataField="remark" textAlign="center"
                               headerText="动作">
                <mx:itemRenderer>
                    <fx:Component>
                        <mx:LinkButton buttonMode="true" useHandCursor="true" color="#6c7dc7" label="{data.remark}"
                                       click="viewSourceLog()">
                            <fx:Script>
                                <![CDATA[
                                import mx.core.Application;
                                import mx.managers.PopUpManager;

                                private function viewSourceLog():void {
                                    var demandLog:SourceDemandLog = new SourceDemandLog();
                                    demandLog.selItem = data;
                                    demandLog.setFocus();

                                    PopUpManager.addPopUp(demandLog, Application.application as DisplayObject, true);
                                    PopUpManager.centerPopUp(demandLog);
                                }
                                ]]>
                            </fx:Script>
                        </mx:LinkButton>
                    </fx:Component>
                </mx:itemRenderer>
            </mx:DataGridColumn>
            <mx:DataGridColumn dataField="changeDemandQty" textAlign="center"
                               headerText="需求改变量"/>
            <mx:DataGridColumn dataField="totalDemandQty" textAlign="center"
                               headerText="改变后总需"/>
            <mx:DataGridColumn dataField="changePurgeQty" textAlign="center"
                               headerText="净需改变量"/>
            <mx:DataGridColumn dataField="totalPurgeQty" textAlign="center"
                               headerText="改变后总净需"/>
            <mx:DataGridColumn dataField="stockQty" textAlign="center"
                               headerText="库存量"/>
            <mx:DataGridColumn dataField="usableQty" textAlign="center"
                               headerText="可用量"/>
            <mx:DataGridColumn dataField="createTime" width="120" textAlign="center"
                               labelFunction="dateLabelFun"
                               headerText="时间"/>
        </mx:columns>
    </mx:DataGrid>
    <mx:ControlBar>
        <mx:LinkBar id="linkButtonBar" iconField="ico" horizontalAlign="right" itemClick="pageClick(event)">
            <mx:dataProvider>
                <mx:ArrayCollection>
                    <fx:Object label="首页" itemData="0" ico="@Embed('/assets/img/bar_img/resultset_first.png')"/>
                    <fx:Object label="上一页" itemData="1" ico="@Embed('/assets/img/bar_img/resultset_previous.png')"/>
                    <fx:Object label="下一页" itemData="2" ico="@Embed('/assets/img/bar_img/resultset_next.png')"/>
                    <fx:Object label="末页" itemData="3" ico="@Embed('/assets/img/bar_img/resultset_last.png')"/>
                </mx:ArrayCollection>
            </mx:dataProvider>
        </mx:LinkBar>
        <mx:Label text="{page.number + 1} / {page.totalPages} 页"/>
        <mx:Label text="共 {page.totalElements} 条记录"/>
    </mx:ControlBar>
    <fx:Script><![CDATA[
        import com.github.izerui.file.components.loading.LoaderManager;
        import com.github.izerui.file.utils.RemoteObjectUtils;
        import com.github.izerui.file.vo.PageVo;

        import mx.events.ItemClickEvent;
        import mx.formatters.DateFormatter;
        import mx.managers.PopUpManager;
        import mx.rpc.events.ResultEvent;

        [Bindable]
        public var inventory:Object;

        [Bindable]
        protected var page:PageVo = new PageVo();

        private function loadData():void {
            LoaderManager.showLoading();
            RemoteObjectUtils.execute("demandService", "inventoryDemandsHistory", function (event:ResultEvent) {
                LoaderManager.hideLoading();
                page = PageVo(event.result);
            }, inventory.entCode, inventory.inventoryId, null, page.number, page.size)

        }

        private function dateLabelFun(item:Object, column:DataGridColumn):String {
            var df:DateFormatter = new DateFormatter();
            df.formatString = "YYYY-MM-DD JJ:NN:SS";
            return df.format(item.createTime);
        }

        private function pageClick(event:ItemClickEvent):void {
            switch (event.item["itemData"]) {
                case 0: {
                    page.number = 0;
                    break;
                }
                case 1: {
                    page.number--;
                    break;
                }
                case 2: {
                    page.number++;
                    break;
                }
                case 3: {
                    page.number = page.totalPages - 1;
                    break;
                }
            }
            if (page.number == page.totalPages) {
                page.number = page.totalPages - 1;
            }
            if (page.number < 0) {
                page.number = 0;
            }
            loadData();
        }

        private function indexNumLabelFun(item:Object, column:DataGridColumn):String {
            var indexNum:int = (page.content.getItemIndex(item) + 1);
            return indexNum.toString();
        }
        ]]>
    </fx:Script>
</mx:TitleWindow>
