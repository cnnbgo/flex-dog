<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:mx="library://ns.adobe.com/flex/mx"
         creationComplete="loadData()">


    <s:HGroup>
        <mx:LinkBar height="25" id="linkButtonBar" iconField="ico" itemClick="buttonClick(event)">
            <mx:dataProvider>
                <s:ArrayCollection>
                    <fx:Object label="刷新" itemData="0"
                               ico="@Embed('/assets/img/bar_img/refresh.png')"/>
                </s:ArrayCollection>
            </mx:dataProvider>
        </mx:LinkBar>
        <mx:Label id="countText0" text="当前在线:"/>
        <mx:Label id="countText1" color="blue"/>
        <mx:Label id="countText2" text="人"/>
    </s:HGroup>
    <mx:DataGrid id="grid" width="100%" height="100%">
        <mx:columns>
            <mx:DataGridColumn dataField="code" width="150"
                               headerText="账套编号"/>
            <mx:DataGridColumn dataField="name" width="300"
                               headerText="企业名称"/>
            <mx:DataGridColumn dataField="count" width="80"
                               headerText="在线数"/>
            <mx:DataGridColumn dataField="users"
                               headerText="在线用户"/>
        </mx:columns>
    </mx:DataGrid>
    <fx:Script><![CDATA[
        import com.github.izerui.file.components.loading.LoaderManager;
        import com.github.izerui.file.utils.RemoteObjectUtils;

        import mx.events.ItemClickEvent;
        import mx.rpc.events.ResultEvent;

        private function loadData():void {
            countText0.visible = false;
            countText1.visible = false;
            countText2.visible = false;
            LoaderManager.showLoading();
            RemoteObjectUtils.execute("onlineService", "onlineUsers", function (event:ResultEvent) {
                LoaderManager.hideLoading();
                grid.dataProvider = event.result;

                var count:Number = 0;
                for each(var item in ArrayCollection(grid.dataProvider)) {
                    count += Number(item.count);
                }
                countText1.text = count.toString();

                countText0.visible = true;
                countText1.visible = true;
                countText2.visible = true;
            })
        }

        private function buttonClick(event:ItemClickEvent):void {
            switch (event.item["itemData"]) {
                case 0:
                    this.loadData();
                    break;
            }
        }
        ]]>
    </fx:Script>
</mx:VBox>
